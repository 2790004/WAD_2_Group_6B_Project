"""
Django settings for tango_with_django_project project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os, time
from django.utils.safestring import mark_safe

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9+=1d(eil14sgq-%izgy7r%j^l+q(y!sr!g^94w_notc^fs6%o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Home',
    'Tournaments',
    'UserCenter',
    'FilesManage',
    'Teams',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'UserCenter.Force_login_middleware.middleware.force_login.force_login'
]

# Root URL configuration
ROOT_URLCONF = 'Tournament.urls'
# Templates configuration
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
# If not find the template folder,then create it
if not os.path.exists(TEMPLATE_DIR):
    os.makedirs(TEMPLATE_DIR)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'Tournament.wsgi.application'

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/London'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Admin settings
admin_url_path = 'admin'

# Data upload settings
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10485760

# Media files
media = 'media/'
media_token_str = 'uploads'
MEDIA_URL = '/' + media_token_str + '/'
MEDIA_ROOT = os.path.join(BASE_DIR, media)
if not os.path.exists(MEDIA_ROOT):
    os.makedirs(MEDIA_ROOT)

# Static files (CSS, JavaScript, Images)
static = '/static/'
static_token_str = 'files'
STATIC_URL = '/' + static_token_str + '/'

if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, static)
else:

    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, static),

    ]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.file'
SESSION_FILE_PATH = os.path.join(BASE_DIR, 'sessions_storage')
if not os.path.exists(SESSION_FILE_PATH):
    os.makedirs(SESSION_FILE_PATH)
SESSION_COOKIE_NAME = "sessionid"
SESSION_COOKIE_AGE = 31556927

# SimpleUI settings
SIMPLEUI_LOGO = '/{}/images/project_logo.png'.format(static_token_str)
SIMPLEUI_DEFAULT_THEME = 'admin.lte.css'
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
SIMPLEUI_ICON = {
    'Tournaments': 'fa fa-database',
    'Usercenter': 'fa fa-users',
    'Tournaments.Category': 'fa fa-th-list',
}
